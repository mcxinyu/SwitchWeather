apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'

def propertiesFile = file("secure/switchweather.properties")
def switchWeatherProperties = new Properties()
switchWeatherProperties.load(new FileInputStream(propertiesFile))

android {
    signingConfigs {
        switchWeather_release {
            keyAlias switchWeatherProperties['keyAlias']
            keyPassword switchWeatherProperties['keyPassword']
            storeFile file(switchWeatherProperties['storeFile'])
            storePassword switchWeatherProperties['storePassword']
        }
    }
    signingConfigs {
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.3'
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "io.github.mcxinyu.switchweather"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        signingConfig signingConfigs.switchWeather_release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.switchWeather_release
            buildConfigField "boolean", "LOG_CALLS", "false"
            buildConfigField "String", "HE_WEATHER_API_KEY", switchWeatherProperties['he_weather_api_key']
            buildConfigField "String", "CAI_YUN_API_KEY", switchWeatherProperties['cai_yun_api_key']
            manifestPlaceholders = [com_google_android_backup_api_key: switchWeatherProperties['com_google_android_backup_api_key'],
                                    baidu_lbs_api_key                : switchWeatherProperties['baidu_lbs_api_key']]
        }
        debug {
            signingConfig signingConfigs.switchWeather_release
            debuggable true
            buildConfigField "boolean", "LOG_CALLS", "true"
            buildConfigField "String", "HE_WEATHER_API_KEY", switchWeatherProperties['he_weather_api_key']
            buildConfigField "String", "CAI_YUN_API_KEY", switchWeatherProperties['cai_yun_api_key']
            manifestPlaceholders = [com_google_android_backup_api_key: switchWeatherProperties['com_google_android_backup_api_key'],
                                    baidu_lbs_api_key                : switchWeatherProperties['baidu_lbs_api_key']]
        }
    }
    productFlavors {
        switchWeatherConfig {
            applicationId "io.github.mcxinyu.switchweather"
            minSdkVersion 19
            targetSdkVersion 25
            versionCode Integer.parseInt(project.VERSION_CODE)
            versionName project.VERSION_NAME
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            vectorDrawables.useSupportLibrary = true
            signingConfig signingConfigs.switchWeather_release
        }
        switchWeatherDemoConfig {
            applicationId "io.github.mcxinyu.switchweather"
            minSdkVersion 19
            targetSdkVersion 25
            versionCode Integer.parseInt(project.VERSION_CODE)
            versionName project.VERSION_NAME
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            vectorDrawables.useSupportLibrary = true
            signingConfig signingConfigs.switchWeather_release
        }
        switchWeatherForceConfig {
            applicationId "io.github.mcxinyu.switchweather"
            minSdkVersion 19
            targetSdkVersion 25
            versionCode Integer.parseInt(project.VERSION_CODE)
            versionName project.VERSION_NAME
            versionNameSuffix '(force)'
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            vectorDrawables.useSupportLibrary = true
            signingConfig signingConfigs.switchWeather_release
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    greendao {
        schemaVersion 1
        targetGenDir 'src/main/java/'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile('com.mikepenz:aboutlibraries:5.8.1@aar') {
        transitive = true
    }
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.jaeger.statusbaruitl:library:1.2.4'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.github.arimorty:floatingsearchview:2.1.1'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'
    compile 'io.reactivex:rxjava:1.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    compile files('libs/BaiduLBS_Android.jar')
    compile 'org.greenrobot:greendao:3.2.2'
    compile 'com.yanzhenjie:recyclerview-swipe:1.1.2'
}
